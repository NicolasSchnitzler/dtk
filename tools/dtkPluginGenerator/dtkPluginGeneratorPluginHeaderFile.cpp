/* dtkPluginGeneratorPluginHeaderFile.cpp --- 
 * 
 * Author: Julien Wintz
 * Copyright (C) 2008 - Julien Wintz, Inria.
 * Created: Wed Mar 11 14:22:17 2009 (+0100)
 * Version: $Id$
 * Last-Updated: Wed Sep  9 08:51:46 2009 (+0200)
 *           By: Julien Wintz
 *     Update #: 15
 */

/* Commentary: 
 * 
 */

/* Change log:
 * 
 */

#include "dtkPluginGenerator.h"

bool dtkPluginGenerator::generatePluginHeaderFile(void)
{
    QFile pluginHeaderFile(d->target.absoluteFilePath(QString(d->plugin).append("Plugin.h")));

    if(!pluginHeaderFile.open(QIODevice::WriteOnly | QIODevice::Text)) {
	qWarning() << "dtkPluginGenerator: unable to open" << QString(d->plugin).append("Plugin.h") << "for writing";
	return false;
    }
        
    QTextStream stream(&pluginHeaderFile);

    stream << QString(
        "// /////////////////////////////////////////////////////////////////\n"
        "// Generated by dtkPluginGenerator\n"
        "// /////////////////////////////////////////////////////////////////\n"
        "\n"
        "#ifndef %2PLUGIN_H\n"
        "#define %2PLUGIN_H\n"
        "\n"
        "#include <dtkCore/dtkPlugin.h>\n"
        "\n"
        "#include \"%1PluginExport.h\"\n"
        "\n"
        "class %2PLUGIN_EXPORT %1PluginPrivate;\n"
        "\n"
        "class %2PLUGIN_EXPORT %1Plugin : public dtkPlugin\n"
        "{\n"
        "    Q_OBJECT\n"
        "    Q_INTERFACES(dtkPlugin)\n"
        "\n"
        "public:\n"
        "     %1Plugin(QObject *parent = 0);\n"
        "    ~%1Plugin(void);\n"
        "\n"
        "    virtual bool initialize(void);\n"
        "    virtual bool uninitialize(void);\n"
        "\n"
        "    virtual QString name(void) const;\n"
        "    virtual QString description(void) const;\n"
        "\n"
        "    virtual QStringList tags(void) const;\n"
        "\n"
        "private:\n"
        "     %1PluginPrivate *d;\n"
        "};\n"
        "\n"
        "#endif\n"
	)
	.arg(QString(d->plugin))
	.arg(QString(d->plugin).toUpper());

    pluginHeaderFile.close();

    return true;
}
